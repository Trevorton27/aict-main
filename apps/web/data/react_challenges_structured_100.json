[
  {
    "id": "react-001",
    "title": "Hello Props",
    "description": "Create <Greeting name=\"Ava\" /> that renders “Hello, Ava!”.",
    "why_it_matters": "Props drive reusable UIs by passing data into components. Rendering text from props is foundational. In production UIs, headers/labels reflect API data, so this pattern appears everywhere. When props change, React re-renders, keeping the view consistent with data.",
    "difficulty": 1,
    "category": "props",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Hello Props</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Greeting({name}){\n    // TODO: render \"Hello, <name>!\"\n    return <div/>;\n  }\n  return <Greeting name=\"Ava\"/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Create <Greeting name=\"Ava\" /> that renders “Hello, Ava!”.",
        "type": "dom",
        "code": "const res=[];\nconst txt=document.getElementById('root').textContent;\nres.push($assert('renders greeting for Ava', txt.includes('Hello, Ava')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Read props.name"
      },
      {
        "level": 2,
        "text": "Return a single element with the greeting"
      },
      {
        "level": 3,
        "text": "Renders should update when props change"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Hello Props</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Greeting({name}){ return <h1>Hello, {name}!</h1>; }\n  return <Greeting name=\"Ava\"/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Hello Props</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Greeting(p){ return React.createElement('h1', null, 'Hello, '+p.name+'!'); }\n  return <Greeting name=\"Ava\"/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      }
    ]
  },
  {
    "id": "react-002",
    "title": "Default Prop",
    "description": "Make <Greeting /> show “Hello, Guest!” when name is missing.",
    "why_it_matters": "Default props keep components resilient when data is missing. Real APIs can be partial or delayed; sensible fallbacks prevent awkward gaps and improve UX. This reduces branching and clarifies expected behavior under uncertainty.",
    "difficulty": 1,
    "category": "props",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Default Prop</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Greeting({name /* = 'Guest' */}){\n    // TODO: default to 'Guest' when name is undefined\n    return <h1>TODO</h1>;\n  }\n  return <div><Greeting/><Greeting name=\"Ava\"/></div>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Make <Greeting /> show “Hello, Guest!” when name is missing.",
        "type": "dom",
        "code": "const res=[]; const txt=document.getElementById('root').textContent;\nres.push($assert('Guest fallback', txt.includes('Hello, Guest')));\nres.push($assert('explicit name', txt.includes('Hello, Ava')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use default param value"
      },
      {
        "level": 2,
        "text": "Or set Greeting.defaultProps"
      },
      {
        "level": 3,
        "text": "Render both cases"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Default Prop</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Greeting({name='Guest'}){ return <h1>Hello, {name}!</h1>; }\n  return <div><Greeting/><Greeting name=\"Ava\"/></div>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Default Prop</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Greeting(p){ return <h1>Hello, {(p.name ?? 'Guest')}!</h1>; }\n  return <div><Greeting/><Greeting name=\"Ava\"/></div>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      }
    ]
  },
  {
    "id": "react-003",
    "title": "Simple State",
    "description": "Local counter in <Counter /> with + / − buttons.",
    "why_it_matters": "Local component state powers transient UI like toggles, counts, and form fields. Understanding setState/useState sequencing makes updates predictable. Many real features (likes, cart totals, steppers) are counters with logic.",
    "difficulty": 1,
    "category": "state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Simple State</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Counter(){\n    // TODO implement counter with + and -\n    return (<div><p>Count: 0</p><button>+</button><button>-</button></div>);\n  }\n  return <Counter/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Local counter in <Counter /> with + / − buttons.",
        "type": "dom",
        "code": "const res=[]; const btns=[...document.querySelectorAll('button')];\nconst plus=btns.find(b=>b.textContent.trim()==='+'); const minus=btns.find(b=>b.textContent.trim()==='-');\nplus && plus.click(); let txt=document.getElementById('root').textContent; res.push($assert('inc', txt.includes('Count: 1')));\nminus && minus.click(); txt=document.getElementById('root').textContent; res.push($assert('dec', txt.includes('Count: 0')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Initialize useState(0)"
      },
      {
        "level": 2,
        "text": "Use functional updates setN(c=>c+1)"
      },
      {
        "level": 3,
        "text": "Render text from state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Simple State</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Counter(){\n    const [n,setN]=React.useState(0);\n    return (<div><p>Count: {n}</p><button onClick={()=>setN(c=>c+1)}>+</button><button onClick={()=>setN(c=>c-1)}>-</button></div>);\n  }\n  return <Counter/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Simple State</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "class App extends React.Component{\n  constructor(p){ super(p); this.state={n:0}; }\n  render(){ return (<div><p>Count: {this.state.n}</p>\n    <button onClick={()=>this.setState(s=>({n:s.n+1}))}>+</button>\n    <button onClick={()=>this.setState(s=>({n:s.n-1}))}>-</button></div>); }\n}\nReactDOM.createRoot(document.getElementById('root')).render(<App/>);"
        }
      }
    ]
  },
  {
    "id": "react-004",
    "title": "Controlled Input",
    "description": "<TextInput value onChange /> Typing updates parent state via onChange.",
    "why_it_matters": "Controlled inputs keep React state as the single source of truth. This prevents DOM/state drift and enables validation, debouncing, and predictable form submission in real apps.",
    "difficulty": 1,
    "category": "controlled-inputs",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Controlled Input</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function TextInput({value,onChange}){\n    // TODO: controlled input\n    return <input placeholder=\"Type...\"/>;\n  }\n  function Parent(){\n    const [v,setV]=React.useState('');\n    return (<div><TextInput value={v} onChange={e=>setV(e.target.value)}/><p>You typed: {v}</p></div>);\n  }\n  return <Parent/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
    },
    "tests": [
      {
        "id": "t1",
        "description": "<TextInput value onChange /> Typing updates parent state via onChange.",
        "type": "dom",
        "code": "const res=[];\nconst input=document.querySelector('input[placeholder=\"Type...\"]');\ninput.value='hello'; input.dispatchEvent(new Event('input',{bubbles:true}));\nconst txt=document.getElementById('root').textContent;\nres.push($assert('echoes typed value', txt.includes('You typed: hello')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Bind value to props.value"
      },
      {
        "level": 2,
        "text": "Call props.onChange from input"
      },
      {
        "level": 3,
        "text": "Keep state in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Controlled Input</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function TextInput({value,onChange}){ return <input placeholder=\"Type...\" value={value} onChange={onChange}/>; }\n  function Parent(){ const [v,setV]=React.useState(''); return (<div><TextInput value={v} onChange={e=>setV(e.target.value)}/><p>You typed: {v}</p></div>); }\n  return <Parent/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Controlled Input</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const TextInput=(p)=>(<input placeholder=\"Type...\" {...p}/>);\n  function Parent(){ const [v,setV]=React.useState(''); return (<div><TextInput value={v} onChange={e=>setV(e.target.value)}/><p>You typed: {v}</p></div>); }\n  return <Parent/>;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root')); root.render(<App/>);"
        }
      }
    ]
  },
  {
    "id": "react-005",
    "title": "Beginner Variant 005",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 005</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 005</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 005</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-006",
    "title": "Beginner Variant 006",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 006</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 006</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 006</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-007",
    "title": "Beginner Variant 007",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 007</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 007</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 007</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-008",
    "title": "Beginner Variant 008",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 008</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 008</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 008</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-009",
    "title": "Beginner Variant 009",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 009</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 009</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 009</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-010",
    "title": "Beginner Variant 010",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 010</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 010</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 010</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-011",
    "title": "Beginner Variant 011",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 011</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 011</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 011</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-012",
    "title": "Beginner Variant 012",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 012</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 012</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 012</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-013",
    "title": "Beginner Variant 013",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 013</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 013</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 013</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-014",
    "title": "Beginner Variant 014",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 014</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 014</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 014</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-015",
    "title": "Beginner Variant 015",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 015</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 015</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 015</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-016",
    "title": "Beginner Variant 016",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 016</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 016</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 016</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-017",
    "title": "Beginner Variant 017",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 017</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 017</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 017</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-018",
    "title": "Beginner Variant 018",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 018</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 018</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 018</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-019",
    "title": "Beginner Variant 019",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 019</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 019</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 019</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-020",
    "title": "Beginner Variant 020",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 020</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 020</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 020</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-021",
    "title": "Beginner Variant 021",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 021</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 021</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 021</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-022",
    "title": "Beginner Variant 022",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 022</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 022</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 022</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-023",
    "title": "Beginner Variant 023",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 023</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 023</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 023</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-024",
    "title": "Beginner Variant 024",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 024</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 024</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 024</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-025",
    "title": "Beginner Variant 025",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 025</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 025</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 025</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-026",
    "title": "Beginner Variant 026",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 026</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 026</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 026</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-027",
    "title": "Beginner Variant 027",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 027</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 027</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 027</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-028",
    "title": "Beginner Variant 028",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 028</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 028</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 028</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-029",
    "title": "Beginner Variant 029",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 029</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 029</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 029</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-030",
    "title": "Beginner Variant 030",
    "description": "Practice props/state/rendering basics; swap text on click.",
    "why_it_matters": "Small variations build reflexes. Most UI work is wiring props to markup and responding to interactions; fluency here accelerates teams.",
    "difficulty": 1,
    "category": "props+state",
    "category_label": "Beginner",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 030</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Practice props/state/rendering basics; swap text on click.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Swap'));\nlet txt=document.getElementById('root').textContent;\nres.push($assert('initial', txt.includes('Hi')));\nbtn && btn.click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('updated', txt.includes('Bye')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wire props to UI"
      },
      {
        "level": 2,
        "text": "Use useState"
      },
      {
        "level": 3,
        "text": "Update on button click"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 030</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Beginner Variant 030</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Label({text}){ return <span>{text}</span>; }\n  function Root(){\n    const [v,setV]=React.useState('Hi');\n    return (<div><Label text={v}/><button onClick={()=>setV('Bye')}>Swap</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-031",
    "title": "Parent–Child Pattern 031",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 031</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 031</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 031</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-032",
    "title": "Parent–Child Pattern 032",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 032</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 032</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 032</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-033",
    "title": "Parent–Child Pattern 033",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 033</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 033</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 033</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-034",
    "title": "Parent–Child Pattern 034",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 034</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 034</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 034</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-035",
    "title": "Parent–Child Pattern 035",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 035</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 035</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 035</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-036",
    "title": "Parent–Child Pattern 036",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 036</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 036</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 036</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-037",
    "title": "Parent–Child Pattern 037",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 037</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 037</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 037</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-038",
    "title": "Parent–Child Pattern 038",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 038</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 038</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 038</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-039",
    "title": "Parent–Child Pattern 039",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 039</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 039</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 039</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-040",
    "title": "Parent–Child Pattern 040",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 040</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 040</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 040</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-041",
    "title": "Parent–Child Pattern 041",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 041</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 041</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 041</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-042",
    "title": "Parent–Child Pattern 042",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 042</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 042</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 042</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-043",
    "title": "Parent–Child Pattern 043",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 043</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 043</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 043</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-044",
    "title": "Parent–Child Pattern 044",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 044</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 044</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 044</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-045",
    "title": "Parent–Child Pattern 045",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 045</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 045</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 045</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-046",
    "title": "Parent–Child Pattern 046",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 046</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 046</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 046</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-047",
    "title": "Parent–Child Pattern 047",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 047</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 047</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 047</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-048",
    "title": "Parent–Child Pattern 048",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 048</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 048</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 048</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-049",
    "title": "Parent–Child Pattern 049",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 049</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 049</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 049</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-050",
    "title": "Parent–Child Pattern 050",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 050</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 050</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 050</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-051",
    "title": "Parent–Child Pattern 051",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 051</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 051</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 051</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-052",
    "title": "Parent–Child Pattern 052",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 052</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 052</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 052</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-053",
    "title": "Parent–Child Pattern 053",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 053</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 053</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 053</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-054",
    "title": "Parent–Child Pattern 054",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 054</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 054</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 054</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-055",
    "title": "Parent–Child Pattern 055",
    "description": "Controlled child invokes parent callback; parent renders derived UI.",
    "why_it_matters": "Parent-owned state with child callbacks keeps data flow testable and reusable. It matches real systems where presentation and orchestration are separated.",
    "difficulty": 2,
    "category": "parent-child",
    "category_label": "Core Parent–Child",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 055</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Controlled child invokes parent callback; parent renders derived UI.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Set X'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('parent reflects child event', txt.includes('Value: X')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Accept a callback prop"
      },
      {
        "level": 2,
        "text": "Call with a value on click"
      },
      {
        "level": 3,
        "text": "Render derived view in parent"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 055</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Parent–Child Pattern 055</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({onChange}){\n    return (<div><button onClick={()=>onChange('X')}>Set X</button></div>);\n  }\n  function Root(){\n    const [v,setV]=React.useState('');\n    return (<div><Child onChange={setV}/><p>Value: {v}</p></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-056",
    "title": "State Nuance 056",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 056</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 056</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 056</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-057",
    "title": "State Nuance 057",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 057</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 057</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 057</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-058",
    "title": "State Nuance 058",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 058</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 058</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 058</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-059",
    "title": "State Nuance 059",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 059</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 059</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 059</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-060",
    "title": "State Nuance 060",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 060</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 060</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 060</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-061",
    "title": "State Nuance 061",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 061</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 061</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 061</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-062",
    "title": "State Nuance 062",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 062</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 062</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 062</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-063",
    "title": "State Nuance 063",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 063</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 063</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 063</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-064",
    "title": "State Nuance 064",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 064</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 064</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 064</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-065",
    "title": "State Nuance 065",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 065</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 065</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 065</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-066",
    "title": "State Nuance 066",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 066</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 066</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 066</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-067",
    "title": "State Nuance 067",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 067</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 067</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 067</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-068",
    "title": "State Nuance 068",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 068</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 068</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 068</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-069",
    "title": "State Nuance 069",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 069</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 069</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 069</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-070",
    "title": "State Nuance 070",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 070</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 070</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 070</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-071",
    "title": "State Nuance 071",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 071</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 071</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 071</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-072",
    "title": "State Nuance 072",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 072</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 072</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 072</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-073",
    "title": "State Nuance 073",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 073</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 073</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 073</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-074",
    "title": "State Nuance 074",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 074</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 074</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 074</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-075",
    "title": "State Nuance 075",
    "description": "Demonstrate safe updates and effect-driven sync.",
    "why_it_matters": "Effect dependencies and functional updates prevent subtle bugs when signals interleave (props, timers, I/O). These practices keep complex UIs stable.",
    "difficulty": 2,
    "category": "state-nuances",
    "category_label": "State Nuances",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 075</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Demonstrate safe updates and effect-driven sync.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('prop reflected after toggle', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Use dependency arrays"
      },
      {
        "level": 2,
        "text": "Prefer functional updates for toggles"
      },
      {
        "level": 3,
        "text": "Avoid duplicating derived state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 075</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>State Nuance 075</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  function Child({open}){\n    React.useEffect(()=>{ /* e.g., focus when open changes */ }, [open]);\n    return <p>Open: {String(open)}</p>;\n  }\n  function Root(){\n    const [open,setOpen]=React.useState(false);\n    return (<div><button onClick={()=>setOpen(o=>!o)}>Toggle</button><Child open={open}/></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-076",
    "title": "Composition Pattern 076",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 076</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 076</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 076</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-077",
    "title": "Composition Pattern 077",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 077</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 077</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 077</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-078",
    "title": "Composition Pattern 078",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 078</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 078</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 078</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-079",
    "title": "Composition Pattern 079",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 079</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 079</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 079</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-080",
    "title": "Composition Pattern 080",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 080</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 080</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 080</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-081",
    "title": "Composition Pattern 081",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 081</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 081</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 081</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-082",
    "title": "Composition Pattern 082",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 082</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 082</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 082</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-083",
    "title": "Composition Pattern 083",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 083</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 083</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 083</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-084",
    "title": "Composition Pattern 084",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 084</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 084</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 084</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-085",
    "title": "Composition Pattern 085",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 085</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 085</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 085</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-086",
    "title": "Composition Pattern 086",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 086</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 086</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 086</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-087",
    "title": "Composition Pattern 087",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 087</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 087</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 087</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-088",
    "title": "Composition Pattern 088",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 088</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 088</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 088</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-089",
    "title": "Composition Pattern 089",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 089</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 089</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 089</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-090",
    "title": "Composition Pattern 090",
    "description": "Compose children with a parent container and coordinate via context.",
    "why_it_matters": "Composition lets you assemble larger UIs from small parts. Context avoids prop drilling and keeps APIs ergonomic—vital for design systems.",
    "difficulty": 2,
    "category": "composition",
    "category_label": "Composition & Patterns",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 090</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Compose children with a parent container and coordinate via context.",
        "type": "dom",
        "code": "const res=[];\nconst btn=[...document.querySelectorAll('button')].find(b=>b.textContent.includes('Toggle'));\nbtn && btn.click();\nconst txt=document.getElementById('root').textContent;\nres.push($assert('panel reflects open state', txt.includes('Open: true')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Coordinate children through context"
      },
      {
        "level": 2,
        "text": "Keep state high; expose triggers"
      },
      {
        "level": 3,
        "text": "Panels render from shared state"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 090</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Composition Pattern 090</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Ctx = React.createContext();\n  function Container({children}){\n    const [open,setOpen]=React.useState(false);\n    return (<Ctx.Provider value={{open,setOpen}}>{children}</Ctx.Provider>);\n  }\n  function Trigger(){ const {setOpen}=React.useContext(Ctx); return <button onClick={()=>setOpen(o=>!o)}>Toggle</button>; }\n  function Panel(){ const {open}=React.useContext(Ctx); return <p>Open: {String(open)}</p>; }\n  function Root(){ return (<Container><Trigger/><Panel/></Container>); }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-091",
    "title": "Memo Child",
    "description": "<ExpensiveChild /> only re-renders when relevant props change.",
    "why_it_matters": "Memoization reduces unnecessary remounts when inputs are equal. In lists and dashboards, this cuts jank and stabilizes frame times; it also documents prop dependencies.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Memo Child</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const ExpensiveChild = React.memo(function ExpensiveChild({value}){\n    return <p>Value: {value}</p>;\n  });\n  function Root(){\n    const [a,setA]=React.useState(0);\n    const [b,setB]=React.useState(0);\n    return (<div>\n      <button onClick={()=>setA(a+1)}>Inc A</button>\n      <button onClick={()=>setB(b+1)}>Inc B</button>\n      <ExpensiveChild value={a}/>\n    </div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "<ExpensiveChild /> only re-renders when relevant props change.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('updates on relevant change', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('unrelated update ok', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks if needed"
      },
      {
        "level": 3,
        "text": "Avoid new objects inline"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Memo Child</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const ExpensiveChild = React.memo(function ExpensiveChild({value}){\n    return <p>Value: {value}</p>;\n  });\n  function Root(){\n    const [a,setA]=React.useState(0);\n    const [b,setB]=React.useState(0);\n    return (<div>\n      <button onClick={()=>setA(a+1)}>Inc A</button>\n      <button onClick={()=>setB(b+1)}>Inc B</button>\n      <ExpensiveChild value={a}/>\n    </div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Memo Child</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const ExpensiveChild = React.memo(function ExpensiveChild({value}){\n    return <p>Value: {value}</p>;\n  });\n  function Root(){\n    const [a,setA]=React.useState(0);\n    const [b,setB]=React.useState(0);\n    return (<div>\n      <button onClick={()=>setA(a+1)}>Inc A</button>\n      <button onClick={()=>setB(b+1)}>Inc B</button>\n      <ExpensiveChild value={a}/>\n    </div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-092",
    "title": "Intermediate Pattern 092",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 092</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 092</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 092</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-093",
    "title": "Intermediate Pattern 093",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 093</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 093</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 093</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-094",
    "title": "Intermediate Pattern 094",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 094</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 094</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 094</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-095",
    "title": "Intermediate Pattern 095",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 095</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 095</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 095</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-096",
    "title": "Intermediate Pattern 096",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 096</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 096</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 096</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-097",
    "title": "Intermediate Pattern 097",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 097</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 097</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 097</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-098",
    "title": "Intermediate Pattern 098",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 098</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 098</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 098</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-099",
    "title": "Intermediate Pattern 099",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 099</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 099</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 099</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  },
  {
    "id": "react-100",
    "title": "Intermediate Pattern 100",
    "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
    "why_it_matters": "Stable references via useCallback/useMemo help memoized children avoid spurious work. Crucial for tables and charts where jitter adds up.",
    "difficulty": 2,
    "category": "performance",
    "category_label": "Intermediate",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 100</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
      "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
      "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
    },
    "tests": [
      {
        "id": "t1",
        "description": "Stabilize callbacks/props so memoized child avoids extra renders.",
        "type": "dom",
        "code": "const res=[];\nconst btns=[...document.querySelectorAll('button')];\nbtns[0].click();\nlet txt=document.getElementById('root').textContent;\nres.push($assert('increments', txt.includes('Value: 1')));\nbtns[1].click();\ntxt=document.getElementById('root').textContent;\nres.push($assert('value persists', txt.includes('Value: 1')));\nreturn summarize(res);"
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "Wrap child with React.memo"
      },
      {
        "level": 2,
        "text": "Stabilize callbacks"
      },
      {
        "level": 3,
        "text": "Hoist constants"
      }
    ],
    "solutions": [
      {
        "id": "sol-1",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 100</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      },
      {
        "id": "sol-2",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Intermediate Pattern 100</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n  <script crossorigin src=\"https://unpkg.com/react@18/umd/react.development.js\"></script>\n  <script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <script>\n    window.$assert = (desc, cond) => ({ id: desc, passed: !!cond });\n    window.summarize = (results) => {\n      const passedIds = results.filter(r => r.passed).map(r => r.id);\n      const failedIds = results.filter(r => !r.passed).map(r => r.id);\n      return { passedIds, failedIds, passed: failedIds.length === 0 };\n    };\n  </script>\n</head>\n<body>\n  <div id=\"root\"></div>\n  <script type=\"text/babel\" data-type=\"challenge\" src=\"script.js\"></script>\n</body>\n</html>\n",
          "style.css": "body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;padding:16px}button{cursor:pointer}",
          "script.js": "function App(){\n  const Child = React.memo(function Child({value,onChange}){\n    return (<div><p>Value: {value}</p><button onClick={onChange}>Inc</button></div>);\n  });\n  function Root(){\n    const [n,setN]=React.useState(0);\n    const onChange=React.useCallback(()=>setN(x=>x+1),[]);\n    return (<div><Child value={n} onChange={onChange}/><button onClick={()=>{}}>Unrelated</button></div>);\n  }\n  const root = ReactDOM.createRoot(document.getElementById('root')); root.render(<Root/>);\n}"
        }
      }
    ]
  }
]